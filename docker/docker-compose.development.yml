version: '3.9'

networks:
  routing-net:

services:
 ors-app:
    container_name: ors-app
    ports:
      - "8080:8080"
      - "9001:9001"
    image: openrouteservice/openrouteservice:latest
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - ./volumes/graphs:/home/ors/ors-core/data/graphs
      - ./volumes/elevation_cache:/home/ors/ors-core/data/elevation_cache
      - ./volumes/logs/ors:/home/ors/ors-core/logs/ors
      - ./volumes/logs/tomcat:/home/ors/tomcat/logs
      - ./volumes/conf:/home/ors/ors-conf
      - ./volumes/data/quebec-latest.osm.pbf:/home/ors/ors-core/data/osm_file.pbf
    environment:
      - BUILD_GRAPHS=False  # Forces the container to rebuild the graphs, e.g. when PBF is changed
      - "JAVA_OPTS=-Djava.awt.headless=true -server -XX:TargetSurvivorRatio=75 -XX:SurvivorRatio=64 -XX:MaxTenuringThreshold=3 -XX:+UseG1GC -XX:+ScavengeBeforeFullGC -XX:ParallelGCThreads=4 -Xms1g -Xmx2g"
      - "CATALINA_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9001 -Dcom.sun.management.jmxremote.rmi.port=9001 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost"
    networks:
      - routing-net

 routing-service: 
  build: 
    dockerfile: ./apps/routing-service/Dockerfile
    context: ../
  container_name: routing-service
  ports: ['3000:80']
  networks: 
    - routing-net
  environment: 
   ASPNETCORE_ENVIRONMENT: Development
   RoutingConfig__DistanceMatrixService: 'http://ors-app:8080/ors/v2/matrix/driving-car'
